---
#################################
#################################
## Super Linter GitHub Actions ##
#################################
#################################
name: Lint Code Base

#
# Documentation:
# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions
#

#############################
# Start the job on all push #
#############################
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      repository:
        description: 'Repository name with owner.'     
        required: false
        type: string
      token:
        description: 'Personal access token (PAT) used to fetch the repository.'     
        required: false
        type: string
      validate_all_code_base: 
        description: 'Will parse the entire repository and find all files to validate across all types. NOTE: When set to false, only new or edited files will be parsed for validation.'
        required: false
        default: true
        type: boolean
      default_branch: 
        description: 'The name of the repository default branch.'
        required: false
        default: 'main'
        type: string

###############
# Set the Job #
###############
jobs:
  build:
    # Name the Job
    name: Lint Code Base ${{ inputs.repository }}
    # Set the agent to run on
    runs-on: ubuntu-latest

    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0
          repository: ${{ inputs.repository }}
          token: ${{ inputs.token }}

      ################################
      # Run Linter against code base #
      ################################
      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: ${{ inputs.validate_all_code_base }}
          DEFAULT_BRANCH: ${{ inputs.default_branch }}
          GITHUB_TOKEN: ${{ inputs.token }}